---

---

<article class="overflow-y-auto h-full">
  <header class="flex items-center justify-between bg-header h-16 px-11 my-4">
    <h1 class="text-4xl font-bold">Lista de tours</h1>
    <a
      href="nuevo"
      class="bg-fondo-place text-text-place text-sm py-2 px-4 rounded-4xl hover:bg-buttons hover:text-text-button"
      aria-label="Crear nuevo Tour">Crear Tour</a
    >
  </header>
  <section class="px-11 mb-10">
    <div class="border border-table rounded-lg w-full">
      <table class="min-w-full w-full table-fixed">
        <thead>
          <tr class="text-left border-b border-table font-medium text-sm">
            <th class="py-2 px-4 font-normal w-1/4">Nombre</th>
            <th class="py-2 font-normal w-1/4">Estado</th>
            <th class="py-2 font-normal w-1/4">Total</th>
            <th class="py-2 font-normal w-1/4">Acción</th>
          </tr>
        </thead>
        <tbody id="table-body"> </tbody>
      </table>
    </div>
  </section>
</article>
<!-- modal para eliminar -->
<div
  data-dialog-backdrop="delete"
  data-dialog-backdrop-close="true"
  class="pointer-events-none fixed inset-0 z-[999] grid h-screen w-screen place-items-center
         bg-black/60 opacity-0 transition-opacity duration-300"
>
  <div
    data-dialog="delete"
    class="relative m-4 p-4 w-2/5 min-w-[40%] max-w-[40%] rounded-lg bg-white shadow-sm"
  >
    <div
      class="flex shrink-0 items-center pb-4 text-xl font-medium text-slate-800"
    >
      Eliminar Tour
    </div>
    <div
      class="relative border-t border-slate-200 py-4 leading-normal text-slate-600 font-light"
    >
      ¿Estás seguro de que deseas eliminar este tour? Esta acción no se puede
      deshacer.
    </div>
    <div class="flex shrink-0 flex-wrap items-center pt-4 justify-end">
      <button
        data-dialog-close="true"
        class="rounded-md border border-transparent py-2 px-4 text-center text-sm transition-all cursor-pointer text-slate-600 hover:bg-slate-100 focus:bg-slate-100 active:bg-slate-100 disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none"
        type="button"
      >
        Cancel
      </button>
      <button
        id="delete"
        class="rounded-md bg-buttons py-2 px-4 border border-transparent text-center text-sm text-white transition-all shadow-md cursor-pointer active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none ml-2"
        type="button"
      >
        Eliminar
      </button>
    </div>
  </div>
</div>
<!-- modal para cambiar estado -->
<div
  data-dialog-backdrop="changeStatus"
  data-dialog-backdrop-close="true"
  class="pointer-events-none fixed inset-0 z-[999] grid h-screen w-screen place-items-center
         bg-black/60 opacity-0 transition-opacity duration-300"
>
  <div
    data-dialog="changeStatus"
    class="relative m-4 p-4 w-2/5 min-w-[40%] max-w-[40%] rounded-lg bg-white shadow-sm"
  >
    <div
      class="flex shrink-0 items-center pb-4 text-xl font-medium text-slate-800"
    >
      <span id="title"></span>
    </div>
    <div
      class="relative border-t border-slate-200 py-4 leading-normal text-slate-600 font-light"
    >
      <span id="body">activar</span>
    </div>
    <div class="flex shrink-0 flex-wrap items-center pt-4 justify-end">
      <button
        data-dialog-close="true"
        class="rounded-md border border-transparent py-2 px-4 text-center text-sm transition-all cursor-pointer text-slate-600 hover:bg-slate-100 focus:bg-slate-100 active:bg-slate-100 disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none"
        type="button"
      >
        Cancel
      </button>
      <button
        id="change"
        class="rounded-md bg-buttons py-2 px-4 border border-transparent text-center text-sm text-white transition-all shadow-md cursor-pointer active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none ml-2"
        type="button"
      >
        Pausar
      </button>
    </div>
  </div>
</div>
<script>
  import type { TourAdmin } from "../../types/tours.js";
  import { Notyf } from "notyf";
  const notyf = new Notyf({
    duration: 3000,
    position: { x: "center", y: "bottom" },
    types: [
      {
        type: "custom-success",
        background: "#16a34a",
        icon: {
          className: "notyf__icon-custom",
          tagName: "div",
        },
      },
      {
        type: "custom-error",
        background: "#dc2626",
        icon: {
          className: "notyf__icon-custom2",
          tagName: "div",
        },
      },
    ],
  });
  let id: string | null = null;
  let status: string | null = null;
  const tableBody = document.getElementById("table-body");
  const title = document.getElementById("title") as HTMLElement;
  const body = document.getElementById("body") as HTMLElement;

  async function getData() {
    try {
      const response = await fetch("/aNKiNFLow/api/tours");
      if (response.ok) {
        const data = await response.json();
        if (tableBody) {
          tableBody.innerHTML = "";
          data.forEach((tour: TourAdmin) => {
            const row = document.createElement("tr");
            row.className =
              "hover:bg-fondo text-text text-sm border-b border-table last:border-b-0";
            row.innerHTML = `
            <td class="pl-4 py-4">${tour.name}</td>
            <td>
              <span class="bg-fondo-place rounded-3xl px-8 py-2">
                ${!tour.status ? "Activo" : "Pausado"}
              </span>
            </td>
            <td>${tour.total_bookings}</td>
            <td>
              <button  
                type="button" 
                data-id="${tour.id}"
                class="text-text-place font-semibold cursor-pointer"
                >Editar
              </button> |
              <button  
                type="button" 
                data-id="${tour.id}"
                data-status="${tour.status}"
                class="text-text-place font-semibold cursor-pointer" data-dialog-target="changeStatus"
                >${!tour.status ? "Pausar" : "Activar"}
              </button> |
              <button  
                type="button" 
                class="text-text-place font-semibold cursor-pointer"
                >Ver
              </button> |
              <button
                type="button"
                data-id="${tour.id}"
                class="text-text-place font-semibold cursor-pointer"
                data-dialog-target="delete"
              >
                Eliminar
              </button>
            </td>
          `;
            tableBody.appendChild(row);
          });
          attachDialogListeners();
        }
      } else {
        notyf.open({
          type: "custom-error",
          message: "Error al obtener los datos",
        });
      }
    } catch (error) {
      console.error("Error al obtener los datos:", error);
    }
  }
  getData();

  function attachDialogListeners() {
    document.querySelectorAll("[data-dialog-target]").forEach((trigger) => {
      const dialogId = trigger.getAttribute("data-dialog-target");
      const dialog = document.querySelector(`[data-dialog="${dialogId}"]`);
      const backdrop = document.querySelector(
        `[data-dialog-backdrop="${dialogId}"]`
      );

      function openDialog() {
        dialog?.classList.remove("pointer-events-none", "opacity-0");
        backdrop?.classList.remove("pointer-events-none", "opacity-0");
        id = trigger.getAttribute("data-id");
        status = trigger.getAttribute("data-status");
        title.textContent = `${status === "false" ? "Pausar el Tour" : "Activar el Tour"}`;
        body.textContent = `${status === "false" ? "¿Estás seguro de que deseas Pausar este tour? Los usuarios no podrán reservarlo hasta que se reactive." : "¿Estás seguro de que deseas Activar este tour?"}`;
      }

      function closeDialog() {
        dialog?.classList.add("pointer-events-none", "opacity-0");
        backdrop?.classList.add("pointer-events-none", "opacity-0");
        id = null;
        status = null;
      }

      trigger.addEventListener("click", openDialog);
      dialog
        ?.querySelectorAll("[data-dialog-close]")
        .forEach((closeBtn) => closeBtn.addEventListener("click", closeDialog));
      backdrop?.addEventListener("click", (event) => {
        if (
          event.target === backdrop &&
          backdrop.hasAttribute("data-dialog-backdrop-close")
        ) {
          closeDialog();
        }
      });
    });
  }
  async function fetching(
    id: string | null,
    method: string,
    status: string | null
  ) {
    try {
      const response = await fetch(
        `/aNKiNFLow/api/tours?id=${id}&status=${status}`,
        {
          method: method,
        }
      );
      if (response.ok) {
        return true;
      } else {
        const data = await response.json();
        return data;
      }
    } catch (error) {
      console.error("Error al eliminar el tour:", error);
    }
  }
  document.getElementById("delete")?.addEventListener("click", async () => {
    const response = await fetching(id, "DELETE", status);
    if (response) {
      notyf.open({
        type: "custom-success",
        message: "Tour eliminado con éxito",
      });
    } else {
      const err = response.json();
      notyf.open({
        type: "custom-error",
        message: err.error || "Error al crear el tour",
      });
    }
    getData();
    document
      .querySelectorAll<HTMLElement>("[data-dialog-close]")
      .forEach((btn) => btn.click());
  });
  document.getElementById("change")?.addEventListener("click", async () => {
    const response = await fetching(id, "PUT", status);
    if (response) {
      notyf.open({
        type: "custom-success",
        message: "Tour modificado con éxito",
      });
    } else {
      const err = response.json();
      notyf.open({
        type: "custom-error",
        message: err.error || "Error al crear el tour",
      });
    }
    getData();
    document
      .querySelectorAll<HTMLElement>("[data-dialog-close]")
      .forEach((btn) => btn.click());
  });
</script>
